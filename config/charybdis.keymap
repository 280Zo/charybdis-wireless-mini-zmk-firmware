#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include "macros.dtsi"

// / {
//     chosen { zmk,matrix_transform = &default_transform; };
// };

/ {
    /* input config for mouse move mode */
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1 2 7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <2>; 
        // bindings = <&ib_toggle_layer 7>; // unfortunately cant access scrolling if auto layer is on 
    };

    /* input config for snipe mode */
    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";   
        device = <&vtrackball>;
        layers = <8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    /* input config for mouse scroll mode */
    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <9>;
        evt-type = <INPUT_EV_REL>;            
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
        scale-divisor = <3>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */
    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */
    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>; // triggers the hold behavior when the tapping-term-ms has expired
            quick-tap-ms = <150>; // If you press a tapped hold-tap again within quick-tap-ms milliseconds of the first press, it will always trigger the tap behavior.
            require-prior-idle-ms = <185>; // like quick-tap-ms however it will apply for any non-modifier key pressed before it
            bindings = <&kp>, <&kp>;  // hold, tap
        };

        td_cursor: td_scroll_or_cursor {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&lt 9 ESC>, <&to 8>; // hold, tap, double_tap
        };

        httl: ht_two_layers {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&to>;
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
        };

        td_layers: td_layer_swap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 5>, <&to 4>; // tap, double_tap, tripple_tap
        };

        td_clk_scrl: td_click_or_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mkp RCLK>, <&mo 9>;  // tap/hold, double_tap
        };

        td_bore: BASE_or_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 6>, <&to 0>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lt_bspc: layer_tap_bspc_del {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BACKSPACE_DELETE";
            #binding-cells = <2>;
            bindings = <&mo>, <&bspc_del>;
            tapping-term-ms = <200>;
        };

        lt_clk: lt_mouse_click {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
            bindings = <&mo>, <&mkp>;
        };

        spc_bspc: space_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp BACKSPACE>;
            mods = <(MOD_LCTL)>;
        };

        lt_space_bs: layer_tap_space_bspc {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE_BACKSPACE";
            #binding-cells = <2>;
            bindings = <&mo>, <&spc_bspc>;
            tapping-term-ms = <200>;
        };

        dot_com: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LCTL)>;
        };
    };

        hm_space: lt_space_with_hm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>; // triggers the hold behavior when the tapping-term-ms has expired
            quick-tap-ms = <150>; // If you press a tapped hold-tap again within quick-tap-ms milliseconds of the first press, it will always trigger the tap behavior.
            require-prior-idle-ms = <185>; // like quick-tap-ms however it will apply for any non-modifier key pressed before it
            bindings = <&kp>, <&spc_bspc>;  // hold, tap
        };

    combos {
        compatible = "zmk,combos";

        Bootloader { // combo invokes central board, i.e. dongle
            bindings = <&bootloader>;
            key-positions = <0 11>;
        };

        ToBase {
            bindings = <&to 0>;
            key-positions = <38 39>;
        }; 

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
            layers = <0>;
        };

        LeftClick {
            bindings = <&mkp LCLK>;
            key-positions = <15 36>;
        };

        LeftClick2 {
            bindings = <&mkp LCLK>;
            key-positions = <32 33>;
        };

        MiddleClick {
            bindings = <&mkp MCLK>;
            key-positions = <28 36>;
        };

        RightClick {
            bindings = <&mkp RCLK>;
            key-positions = <16 36>;
        };

        NavForOneHandScroll {
            bindings = <&mo 9>;
            key-positions = <31 32>;
        };

        // arrow combos for one handed youtube sponsor skipping
        RightArrow { 
            bindings = <&kp RIGHT>;
            key-positions = <34 35>;
        }; 

        LeftArrow {
            bindings = <&kp LEFT>;
            key-positions = <33 34>;
        }; 

        // BASE_or_EXTRAS {
        //     bindings = <&td_bore>;
        //     key-positions = <38 39>;
        // };

        // GameLayer {
        //     bindings = <&tog 4>;
        //     key-positions = <8 9>;
        // };

        // PhotoLayer {
        //     bindings = <&tog 5>;
        //     key-positions = <2 3>;
        // };
    };

// ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    00     01     02     03     04     05        06     07     08     09     10     11
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    12     13     14     15     16     17        18     19     20     21     22     23
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    24     25     26     27     28     29        30     31     32     33     34     35
// ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
//                         36     37     38        39     40
//                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
//#define BASE    0
//#define NUM     1
//#define NAV     2
//#define SYM     3
//#define GAME    4
//#define PHOTOS  5
//#define EXTRAS  6
//#define MOUSE   7
//#define SLOW    8
//#define SCROLL  9

    keymap {
        compatible = "zmk,keymap";
        BASE {
            display-name = "DEF";
            bindings = <
// ╭────────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮  ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
       &gresc            &kp Q          &kp W          &kp E           &kp R          &kp T             &kp Y         &kp U          &kp I         &kp O           &kp P        &kp MINUS
// ├────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤  ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
       &lt 2 TAB         &kp A          &kp S          &kp D           &kp F          &kp G             &kp H         &kp J          &kp K         &kp L       &kp SEMICOLON  &kp SINGLE_QUOTE
// ├────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤  ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
       &kp LCTRL         &kp Z          &kp X          &kp C           &kp V          &kp B             &kp N         &kp M        &kp COMMA      &kp PERIOD      &kp FSLH     &mt RALT BSLH
// ╰────────────────┴──────────────┴──────────────┼──────────────┼──────────────┼──────────────┤  ├──────────────┼──────────────┼──────────────┴──────────────┴──────────────┴──────────────╯
                                                   &lt_clk 9 LCLK   &spc_bspc   &mt LSHFT RETURN  &mt RSHFT RETURN &lt_bspc 1 0
                                               // ╰──────────────┴──────────────┴──────────────╯  ╰──────────────┴──────────────╯
            >; 
        };

        NUM {
            display-name = "NUM";
            bindings = <
&kp ESC      &kp EXCL  &kp AT &kp HASH &kp DOLLAR &kp PERCENT       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR   &trans 
&lt_bspc 2 0 &kp N1    &kp N2 &kp N3   &kp N4     &kp N5            &kp GRAVE  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &trans
&kp LCTRL    &kp N6    &kp N7 &kp N8   &kp N9     &kp N0            &kp TILDE  &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &trans
                              &dot_com &lt 2 SPC  &trans            &trans     &trans
            >;
        };

        NAV {
            display-name = "NAV";
            bindings = <
&none   &none           &none       &none      &none       &to 5         &none    &kp HOME    &none    &kp PG_UP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans  &kp LG(LS(S))   &kp LALT    &kp LCTRL  &kp TAB     &none         &kp LEFT &kp DOWN    &kp UP   &kp RIGHT  &kp C_PREVIOUS     &kp C_NEXT
&trans  &kp RC(Z)       &none       &none      &none       &none         &none    &kp END     &none    &kp PG_DN  &none              &kp C_PLAY_PAUSE
                                    &to 1      &trans      &trans        &trans   &bspc_del
            >; 
        };

        SYM {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        GAME {
            bindings = <
&kp ESC &kp N1     &kp Q  &kp W   &kp E      &kp R           &none  &none  &none  &none  &none  &none
&kp TAB &kp LSHFT  &kp A  &kp S   &kp D      &kp F           &none  &none  &none  &none  &none  &none
&kp F15 &kp LCTRL  &kp Z  &kp X   &kp C      &kp V           &none  &none  &none  &none  &none  &none
                          &mo 1   &kp SPACE  &kp LEFT_ALT    &none  &none
            >;
        };

        PHOTOS {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        EXTRAS {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        MOUSE {
            bindings = <
&trans    &trans    &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&none     &none     &mkp LCLK  &mkp MCLK &mkp RCLK &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                               &trans    &trans    &trans    &trans    &trans 
            >;
        };

        SLOW {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                              &trans    &trans    &trans    &trans    &trans
            >;
        };

        SCROLL {
            display-name = "SCROLL";
            bindings = <
// ╭────────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮  ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
       &gresc            &kp Q          &kp W          &kp E           &kp R          &kp T             &kp Y         &kp U          &kp I         &kp O           &kp P        &kp MINUS
// ├────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤  ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
       &lt 2 TAB         &kp A          &kp S          &kp D           &kp F          &kp G             &kp H         &kp J          &kp K         &kp L       &kp SEMICOLON  &kp SINGLE_QUOTE
// ├────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤  ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
       &kp LCTRL         &kp Z          &kp X          &kp C           &kp V          &kp B             &kp N         &kp M        &kp COMMA      &kp PERIOD      &kp FSLH     &mt RALT BSLH
// ╰────────────────┴──────────────┴──────────────┼──────────────┼──────────────┼──────────────┤  ├──────────────┼──────────────┼──────────────┴──────────────┴──────────────┴──────────────╯
                                                       &none    &lt_space_bs 9 0 &mt LSHFT RETURN  &mt RSHFT RETURN &lt_bspc 1 0
                                               // ╰──────────────┴──────────────┴──────────────╯  ╰──────────────┴──────────────╯
            >;
        };
    };
};
