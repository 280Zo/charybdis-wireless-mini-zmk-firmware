#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define U_TAPPING_TERM 200

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    hm: homerow_mod {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <250>;
        quick-tap-ms = <150>;
        require-prior-idle-ms = <125>;
        bindings = <&kp>, <&kp>;
    };

    combos {
        compatible = "zmk,combos";

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        Layer_7 {
            bindings = <&mo 7>;
            key-positions = <38 39>;
        };
    };

    macros {
        VSplit: VSplit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp SEMI &kp LS(V) &kp LS(S) &kp LS(P) &kp RET>;
            label = "VSPLIT";
        };

        HSplit: HSplit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp SEMI &kp LS(S) &kp LS(P) &kp RET>;
            label = "HSPLIT";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
 &kp  C_AC_SEARCH           &kp  Q            &kp  W                     &kp  E                         &kp  R             &kp  T  &kp  Y  &kp  U             &kp  I                             &kp  O                          &kp  P                    &to  5   
 &hm  LG(E) TAB             &hm  LEFT_GUI A   &hm  LEFT_ALT S            &hm  LCTRL D                   &hm  LEFT_SHIFT T  &kp  G  &kp  H  &hm  LEFT_SHIFT J  &hm  RCTRL K                       &hm  RIGHT_ALT L                &hm  LEFT_META SEMICOLON  &kp  DEL 
 &kp  LA(LC(T))             &kp  Z            &mt  LC(LA(LEFT_SHIFT)) X  &mt  LA(LC(LG(LEFT_SHIFT))) C  &kp  F             &kp  V  &kp  B  &kp  N             &mt  LA(LC(LG(LEFT_SHIFT))) COMMA  &mt  LC(LA(LEFT_SHIFT)) PERIOD  &kp  FSLH                 &to  6   
 &hm  LC(F10) C_PLAY_PAUSE  &lt  1 BACKSPACE  &lt  2 ESCAPE              &lt  4 RETURN                  &lt  3 SPACE       
            >;
        };
    };
};
