name: Build and Release ZMK Firmware

on:
  push:
    tags:
      - "v*"
    branches:
      - "**"
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      groups: ${{ steps.make-groups.outputs.groups }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Generate additional keymaps
        run: |
          python scripts/convert_keymap.py -c q2c --in-path config/charybdis.keymap
          python scripts/convert_keymap.py -c q2g --in-path config/charybdis.keymap

      - name: Upload generated keymaps
        uses: actions/upload-artifact@v4
        with:
          name: generated-keymaps
          path: config/*.keymap

      - name: Generate build matrix
        run: |
          python scripts/generate_matrix.py > build.json

      - name: Generate firmware matrix JSON
        id: make-groups
        run: |
          groups=$(jq -c '[.[] | {keymap, format, shield, board, artifact: ."artifact-name"}]' build.json)
          echo "groups=$groups" >> $GITHUB_OUTPUT

  cache:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable

    outputs:
      base-dir: ${{ steps.prep.outputs.base-dir }}
      extra-cmake-args: ${{ steps.prep.outputs.extra-cmake-args }}

    steps:
      - uses: actions/checkout@v4

      - name: Prepare extra modules
        id: prep
        run: |
          if [ -f zephyr/module.yml ]; then
            ZMK_LOAD_ARG="-DZMK_EXTRA_MODULES=${GITHUB_WORKSPACE}"
            BASE_DIR="${TMPDIR:-/tmp}/zmk-config"
            mkdir -p "${BASE_DIR}/config" "${BASE_DIR}/boards/shields"
            cp -r config/* "${BASE_DIR}/config/"
            cp -r boards/shields/* "${BASE_DIR}/boards/shields/"
          else
            ZMK_LOAD_ARG=""
            BASE_DIR="${GITHUB_WORKSPACE}"
          fi
          echo "base-dir=$BASE_DIR" >> $GITHUB_OUTPUT
          echo "extra-cmake-args=$ZMK_LOAD_ARG" >> $GITHUB_OUTPUT

      - name: Cache west & modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.prep.outputs.base-dir }}/modules
            ${{ steps.prep.outputs.base-dir }}/tools
            ${{ steps.prep.outputs.base-dir }}/zephyr
            ${{ steps.prep.outputs.base-dir }}/bootloader
            ${{ steps.prep.outputs.base-dir }}/zmk
          key: ${{ runner.os }}-zmk-${{ hashFiles('config/west.yml','boards/shields/**') }}
          restore-keys: |
            ${{ runner.os }}-zmk-

      - name: West init & update
        working-directory: ${{ steps.prep.outputs.base-dir }}
        run: |
          west init -l config
          west update
          west zephyr-export

      - name: Upload cache workspace
        uses: actions/upload-artifact@v4
        with:
          name: cache-workspace
          path: ${{ steps.prep.outputs.base-dir }}

  build:
    needs: [setup, cache]
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable

    strategy:
      fail-fast: false
      matrix:
        firmware: ${{ fromJson(needs.setup.outputs.groups) }}

    env:
      FALLBACK_EXT: bin
      BASE_DIR: /tmp/zmk-config

    steps:
      - uses: actions/checkout@v4

      - name: Download cache workspace
        uses: actions/download-artifact@v4
        with:
          name: cache-workspace
          path: ${{ env.BASE_DIR }}

      - name: Download generated keymaps
        uses: actions/download-artifact@v4
        with:
          name: generated-keymaps
          path: config/

      - name: Build firmware ${{ matrix.firmware.artifact }}
        run: |
          set -euxo pipefail

          KEYMAP="${{ matrix.firmware.keymap }}"
          FORMAT="${{ matrix.firmware.format }}"
          SHIELD="${{ matrix.firmware.shield }}"
          BOARD="${{ matrix.firmware.board }}"
          ARTIFACT="${{ matrix.firmware.artifact }}"
          BUILD_PATH=$(mktemp -d)

          # Handle reset special case
          if [[ "$FORMAT" == "reset" ]]; then
            ARTIFACT="firmware-reset-nanov2"
          fi

          # Copy custom keymap if exists
          if [[ -f "config/${KEYMAP}.keymap" ]]; then
            cp "config/${KEYMAP}.keymap" "${BASE_DIR}/config/charybdis.keymap"
          fi

          west build -s zmk/app \
            -d "$BUILD_PATH" \
            -b "$BOARD" \
            -- \
            -DZMK_CONFIG="${BASE_DIR}/config" \
            ${{ needs.prepare.outputs.extra-cmake-args }} \
            -DSHIELD="$SHIELD"

          mkdir -p "${KEYMAP}-${FORMAT}"

          if [[ -f "$BUILD_PATH/zephyr/zmk.uf2" ]]; then
            cp "$BUILD_PATH/zephyr/zmk.uf2" "${KEYMAP}-${FORMAT}/${SHIELD}.uf2"
          elif [[ -f "$BUILD_PATH/zephyr/zmk.${FALLBACK_EXT}" ]]; then
            cp "$BUILD_PATH/zephyr/zmk.${FALLBACK_EXT}" "${KEYMAP}-${FORMAT}/${SHIELD}.${FALLBACK_EXT}"
          else
            echo "⚠️ No build artifact found for ${KEYMAP}-${FORMAT}-${SHIELD}"
            exit 1
          fi

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.firmware.artifact }}
          path: ${{ matrix.firmware.keymap }}-${{ matrix.firmware.format }}/*
