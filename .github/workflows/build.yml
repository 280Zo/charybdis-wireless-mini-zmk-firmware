name: Build ZMK Keymap Firmwares Serially from build.yaml

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 */2 *' # run every two months to keep artifacts from expiring

jobs:
  parse-matrix:
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - id: set-matrix
        run: |
          import yaml, json
          from pathlib import Path

          with open("build.yaml", "r") as f:
              matrix = yaml.safe_load(f)

          # Transform into list of dicts
          builds = [{"shield": item["shield"], "board": item["board"]} for item in matrix["include"]]

          print(f"::set-output name=matrix::{json.dumps(builds)}")
        shell: python
        
  prepare-keymaps:
    runs-on: ubuntu-latest
    outputs:
      keymap-matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Generate additional keymaps
        run: |
          python scripts/convert_keymap.py -c q2c --in-path "$GITHUB_WORKSPACE/config/charybdis.keymap"
          python scripts/convert_keymap.py -c q2g --in-path "$GITHUB_WORKSPACE/config/charybdis.keymap"
          # Add new layouts here

  build-serial:
    needs: parse-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.parse-matrix.outputs.build-matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Call upstream ZMK builder
        uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
        with:
          board: ${{ matrix.board }}
          shield: ${{ matrix.shield }}
          config_path: config

      - name: Wait for merge output artifact ZIP to exist
        run: |
          echo "Looking for artifact zip..."
          for i in {1..10}; do
            if ls artifact-*.zip 1> /dev/null 2>&1; then
              echo "Found artifact zip."
              break
            fi
            echo "Artifact zip not found yet, waiting..."
            sleep 5
          done
          if ! ls artifact-*.zip 1> /dev/null 2>&1; then
            echo "Artifact zip not found after waiting."
            exit 1
          fi

      - name: Rename merged artifact ZIP
        run: |
          mkdir -p renamed
          ARTIFACT_ZIP=$(ls artifact-*.zip | head -n 1)
          NEW_NAME="${{ matrix.board }}_${{ matrix.shield }}_${{ matrix.keymap }}.zip"
          mv "$ARTIFACT_ZIP" "renamed/$NEW_NAME"
          echo "Renamed $ARTIFACT_ZIP to renamed/$NEW_NAME"

      - name: Upload renamed artifact ZIP
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.board }}_${{ matrix.shield }}_${{ matrix.keymap }}
          path: renamed/${{ matrix.board }}_${{ matrix.shield }}_${{ matrix.keymap }}.zip

  # build:
  #   needs: parse-matrix
  #   needs: prepare-keymaps
  #   # uses: ./.github/workflows/user_config_build.yaml
  #   uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
  #   with:
  #     build_matrix_path: build.yaml
  #     config_path: config

  keymap_images:
    needs: build
    permissions:
      contents: write
    uses: ./.github/workflows/draw_keymaps.yaml
    # credit to https://github.com/caksoylar/keymap-drawer
