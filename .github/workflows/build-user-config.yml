name: Build ZMK user config (patched from upstream)

on:
  workflow_call:
    inputs:
      board:
        required: false
        type: string
      shield:
        required: false
        type: string
      keymap:
        required: false
        type: string
      format:
        required: false
        type: string
      build_matrix_path:
        required: false
        type: string
      config_path:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - name: Set build matrix
        id: set
        run: |
          echo "::group::Preparing build matrix"
          if [[ -n "${{ inputs.board }}" && -n "${{ inputs.shield }}" ]]; then
            echo "Single entry mode: using provided inputs."
            matrix='[{"board":"${{ inputs.board }}","shield":"${{ inputs.shield }}","keymap":"${{ inputs.keymap || 'default' }}","format":"${{ inputs.format || 'bt' }}"}]'
            echo "matrix=$matrix" >> $GITHUB_OUTPUT
          elif [[ -n "${{ inputs.build_matrix_path }}" ]]; then
            echo "Matrix mode: reading from ${{ inputs.build_matrix_path }}"
            matrix=$(yq eval '.include' "${{ inputs.build_matrix_path }}" | jq -c .)
            echo "matrix=$matrix" >> $GITHUB_OUTPUT
          else
            echo "::error::No board/shield inputs or build_matrix_path provided"
            exit 1
          fi
          echo "::endgroup::"

      - name: Checkout config
        uses: actions/checkout@v4
        with:
          path: config

      - name: Checkout ZMK
        uses: actions/checkout@v4
        with:
          repository: zmkfirmware/zmk
          path: zmk

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install west
        run: pip install west

      - name: Initialize west
        run: |
          west init -l config
          west update
          west zephyr-export
          pip install -r zmk/zephyr/scripts/requirements.txt

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache
            ~/.west
            .west
            build
            zephyr/.zephyr
            modules
          key: zmk-cache-${{ runner.os }}-${{ inputs.board || 'multi' }}-${{ inputs.shield || 'multi' }}-${{ inputs.keymap || 'multi' }}-${{ inputs.format || 'multi' }}
          restore-keys: |
            zmk-cache-${{ runner.os }}-

      - name: Build firmware
        run: |
          matrix=${{ steps.set.outputs.matrix }}
          builds=$(echo "$matrix" | jq -c '.[]')
          for item in $builds; do
            board=$(echo $item | jq -r '.board')
            shield=$(echo $item | jq -r '.shield')
            keymap=$(echo $item | jq -r '.keymap')
            format=$(echo $item | jq -r '.format')
            echo "::group::Building $board-$shield-$keymap-$format"
            west build -s config -d build/$shield-$keymap-$format \
              -b $board \
              -- -DSHIELD=$shield -DCONF_FILE=prj.$format.conf
            echo "::endgroup::"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-firmware
          path: build/*/zephyr/zmk.uf2
